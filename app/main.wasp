app myProject {
  wasp: {
    version: "^0.12.2"
  },
  title: "CA Assist",
  client: {
    rootComponent: import App from "@src/client/App",
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {
        userSignupFields: import {usernamePasswordSignupFields} from "@src/server/auth/setUsername"
      },
      google: { 
        configFn: import { getGoogleAuthConfig } from "@src/server/auth/setUsername.js",
        userSignupFields: import { getGoogleUserFields } from "@src/server/auth/setUsername.js",
      },
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/chat",
  }
}

entity User {=psl
  id                        Int             @id @default(autoincrement())
  panNumber                 String?
  completeAccount           Boolean         @default(false)
  firstName                 String?
  lastName                  String?
  primaryLang               String?
  secondaryLang             String?
  currentConv               String?
  email                     String?         @unique
  username                  String?         @unique
  createdAt                 DateTime        @default(now())
  lastActiveTimestamp       DateTime        @default(now())
  isAdmin                   Boolean         @default(false)
  stripeId                  String? 
  checkoutSessionId         String?
  hasPaid                   Boolean         @default(false)
  subscriptionTier          String?
  subscriptionStatus        String?
  sendEmail                 Boolean         @default(false)
  datePaid                  DateTime?
  credits                   Int             @default(3)
psl=}


route LandingPageRoute { path: "/", to: LandingPage }
page LandingPage {
  component: import {LandingPage} from "@src/client/landing-page/LandingPage"
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import {LoginPage} from "@src/client/auth/LoginPage"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import {SignupPage} from "@src/client/auth/SignupPage"
}

route UserInfoRoute {path: "/userinfo", to: UserInfoPage}
page UserInfoPage {
  authRequired: true,
  component: import {UserInfoPage} from "@src/client/app/UserInfoPage"
}

route ChatRoute {path: "/chat", to: ChatPage}
page ChatPage {
  authRequired: true,
  component: import {ChatPage} from "@src/client/app/ChatPage"
}

action updateCurrentUser {
  fn: import { updateCurrentUser } from "@src/server/actions",
  entities: [User]
}